[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "why rehab",
    "section": "",
    "text": "library(devtools)\n\nLoading required package: usethis\n\nlibrary(tidyverse, tidycensus)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(pak)\nlibrary(cmapplot)\n\ncmapplot has registered the following fonts for use in this R session:\n   Whitney Semibold, Whitney Medium, Whitney Book\ncmapplot requires RStudio to use Whitney fonts in the R plots window.\n    Please install RStudio. &lt;https://www.rstudio.com&gt;\n\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\n\n\n\n\n\ncounty2014 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2014.csv\")\n\nRows: 7 Columns: 151\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (27): MUNI, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (124): INC_LT_25K, INC_25_50K, INC_50_75K, INC_75_100K, INC_100_150K, IN...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2014 &lt;- county2014 %&gt;%\n  add_column(year = 2014) %&gt;%\n  rename(GEOG = MUNI) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_5UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RNT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    ) %&gt;%\n  rename(RENT_OCC_HU = RNT_OCC_HU)\n\n\n\n\n\ncounty2015 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2015.csv\")\n\nRows: 8 Columns: 239\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (62): CNTY, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (177): F2010_POP, F2000_POP, POP_CHANGE, TOT_EMP_RES, TOT_EMP_WORK, AVG_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2015 &lt;- county2015 %&gt;%\n  add_column(year = 2015) %&gt;%\n  rename(GEOG = CNTY) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT,\n         HU_SNG_DET,\n         HU_SNG_ATT,\n         HU_2UN,\n         HU_3_4UN,\n         HU_GT_5UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2016 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2016.csv\")\n\nRows: 8 Columns: 156\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (23): GEOG, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (133): F2000_POP, F2010_POP, POP_CHANGE, TOT_POP, UND19, A20_34, A35_49,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2016 &lt;- county2016 %&gt;%\n  add_column(year = 2016) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_5UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2017 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2017.csv\")\n\nRows: 8 Columns: 156\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (58): GEOG, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAICS...\ndbl (98): F2000_POP, F2010_POP, POP_CHANGE, TOT_POP, UND19, A20_34, A35_49, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2017 &lt;- county2017 %&gt;%\n  add_column(year = 2017) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_5UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2018 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2018.csv\")\n\nRows: 8 Columns: 227\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (27): GEOG, AGG_TT, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, ...\ndbl (182): F2000_POP, F2010_POP, TOT_POP, UND19, A20_34, A35_49, A50_64, A65...\nlgl  (18): F2000_UND19, F2000_A20_34, F2000_A35_49, F2000_A50_64, F2000_OV65...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2018 &lt;- county2018 %&gt;%\n  add_column(year = 2018) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_5UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2019 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2019.csv\")\n\nRows: 8 Columns: 214\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (50): Field1, TOT_EMP_RES, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3...\ndbl (164): F2000_POP, F2010_POP, TOT_POP, UND19, A20_34, A35_49, A50_64, A65...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2019 &lt;- county2019 %&gt;%\n  add_column(year = 2019) %&gt;%\n  rename(GEOG = Field1) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_5UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         H_Cost_Typical, # % income spent on housing for typical family\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2020 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2020.csv\")\n\nRows: 8 Columns: 222\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (23): GEOG, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (181): F2000_POP, F2010_POP, TOT_POP, UND19, A20_34, A35_49, A50_64, A65...\nlgl  (18): F2000_UND19, F2000_A20_34, F2000_A35_49, F2000_A50_64, F2000_OV65...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2020 &lt;- county2020 %&gt;%\n  add_column(year = 2020) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_5UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         H_Cost_Typical, # % income spent on housing for typical family\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2021 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2021.csv\")\n\nRows: 8 Columns: 282\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (28): GEOG, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (236): GEOID, F2000_POP, F2010_POP, TOT_POP, UND5, A5_19, A20_34, A35_49...\nlgl  (18): F2000_UND19, F2000_A20_34, F2000_A35_49, F2000_A50_64, F2000_OV65...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2021 &lt;- county2021 %&gt;%\n  add_column(year = 2021) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_19UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         H_Cost_Typical, # % income spent on housing for typical family\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2022 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2022.csv\")\n\nRows: 8 Columns: 259\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (25): GEOG, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (216): GEOID, F2000_POP, F2010_POP, F2020_POP, F2020_HH, F2020_HH_SIZE, ...\nlgl  (18): F2000_UND19, F2000_A20_34, F2000_A35_49, F2000_A50_64, F2000_OV65...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2022 &lt;- county2022 %&gt;%\n  add_column(year = 2022) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_19UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         H_Cost_Typical, # % income spent on housing for typical family\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2023 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2023.csv\")\n\nRows: 8 Columns: 259\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (25): GEOG, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (216): GEOID, F2000_POP, F2010_POP, F2020_POP, F2020_HH, F2020_HH_SIZE, ...\nlgl  (18): F2000_UND19, F2000_A20_34, F2000_A35_49, F2000_A50_64, F2000_OV65...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2023 &lt;- county2023 %&gt;%\n  add_column(year = 2023) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_19UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         H_Cost_Typical, # % income spent on housing for typical family\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2024 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2024.csv\")\n\nRows: 8 Columns: 429\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (22): GEOG, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (243): GEOID, F2000_POP, F2010_POP, F2020_POP, F2020_HH, F2020_HH_SIZE, ...\nlgl (164): HA_AFT2000, HA_70_00, TRANSIT_LOW_PCT, TRANSIT_MOD_PCT, TRANSIT_H...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2024 &lt;- county2024 %&gt;%\n  add_column(year = 2024) %&gt;%\n  select(-c(HA_AFT2000:PRIV_EMP)) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_19UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         H_Cost_Typical, # % income spent on housing for typical family\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\n\ncounty2014 &lt;- county2014 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_GT_5UN)) \n\n\ncounty2015 &lt;- county2015 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_GT_5UN)) \n\n\ncounty2016 &lt;- county2016 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_GT_5UN)) \n\n\ncounty2017 &lt;- county2017 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_GT_5UN)) \n\n\ncounty2018 &lt;- county2018 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_GT_5UN)) \n\n\ncounty2019 &lt;- county2019 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_GT_5UN)) \n\n\ncounty2020 &lt;- county2020 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_GT_5UN)) \n\n\ncounty2021 &lt;- county2021 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_5_9UN +\n                        HU_10_19UN + HU_GT_19UN),\n         HU_GT_5UN = (HU_5_9UN + HU_10_19UN + HU_GT_19UN)) \n\n\ncounty2022 &lt;- county2022 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_5_9UN +\n                        HU_10_19UN + HU_GT_19UN),\n         HU_GT_5UN = (HU_5_9UN + HU_10_19UN + HU_GT_19UN))  \n\n\ncounty2023 &lt;- county2023 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_5_9UN +\n                        HU_10_19UN + HU_GT_19UN),\n         HU_GT_5UN = (HU_5_9UN + HU_10_19UN + HU_GT_19UN)) \n\n\ncounty2024 &lt;- county2024 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_5_9UN +\n                        HU_10_19UN + HU_GT_19UN),\n         HU_GT_5UN = (HU_5_9UN + HU_10_19UN + HU_GT_19UN)) \n\n\n\n\n\ncounty &lt;- bind_rows(county2014,\n          county2015,\n          county2016,\n          county2017,\n          county2018,\n          county2019,\n          county2020,\n          county2021,\n          county2022,\n          county2023,\n          county2024)\n\ncounty &lt;- county %&gt;%\n  mutate(GEOG = str_replace(GEOG, \"CMAP Region\", \"Region\")) %&gt;%\n  mutate(vac_rate = ((VAC_HU/HU_TOT)*100))\n\n\n\n\n\ninflation &lt;- read_csv(\".\\\\inputs\\\\inflation.csv\")\n\nNew names:\nRows: 15 Columns: 5\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(2): period, periodName dbl (3): ...1, year, value\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\ncounty &lt;- county %&gt;%\n  full_join(inflation, join_by(year == year)) %&gt;%\n  rename(inflationfac = value) %&gt;%\n  mutate(infl2024 = 313.689/inflationfac) %&gt;% #313.689 is the 2024 inflation factor \n  mutate(medincome_adjust = infl2024 *MEDINC) %&gt;%\n  mutate(medhv_adjust = infl2024 * MED_HV)\n\n\n\n\n\ncounty &lt;- county %&gt;%\n  mutate(stock_hh = HU_TOT / TOT_HH)\n\n\nwrite_csv(county, \".\\\\county.csv\")"
  },
  {
    "objectID": "index.html#tidy-data",
    "href": "index.html#tidy-data",
    "title": "why rehab",
    "section": "",
    "text": "county2014 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2014.csv\")\n\nRows: 7 Columns: 151\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (27): MUNI, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (124): INC_LT_25K, INC_25_50K, INC_50_75K, INC_75_100K, INC_100_150K, IN...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2014 &lt;- county2014 %&gt;%\n  add_column(year = 2014) %&gt;%\n  rename(GEOG = MUNI) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_5UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RNT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    ) %&gt;%\n  rename(RENT_OCC_HU = RNT_OCC_HU)\n\n\n\n\n\ncounty2015 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2015.csv\")\n\nRows: 8 Columns: 239\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (62): CNTY, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (177): F2010_POP, F2000_POP, POP_CHANGE, TOT_EMP_RES, TOT_EMP_WORK, AVG_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2015 &lt;- county2015 %&gt;%\n  add_column(year = 2015) %&gt;%\n  rename(GEOG = CNTY) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT,\n         HU_SNG_DET,\n         HU_SNG_ATT,\n         HU_2UN,\n         HU_3_4UN,\n         HU_GT_5UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2016 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2016.csv\")\n\nRows: 8 Columns: 156\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (23): GEOG, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (133): F2000_POP, F2010_POP, POP_CHANGE, TOT_POP, UND19, A20_34, A35_49,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2016 &lt;- county2016 %&gt;%\n  add_column(year = 2016) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_5UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2017 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2017.csv\")\n\nRows: 8 Columns: 156\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (58): GEOG, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAICS...\ndbl (98): F2000_POP, F2010_POP, POP_CHANGE, TOT_POP, UND19, A20_34, A35_49, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2017 &lt;- county2017 %&gt;%\n  add_column(year = 2017) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_5UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2018 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2018.csv\")\n\nRows: 8 Columns: 227\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (27): GEOG, AGG_TT, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, ...\ndbl (182): F2000_POP, F2010_POP, TOT_POP, UND19, A20_34, A35_49, A50_64, A65...\nlgl  (18): F2000_UND19, F2000_A20_34, F2000_A35_49, F2000_A50_64, F2000_OV65...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2018 &lt;- county2018 %&gt;%\n  add_column(year = 2018) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_5UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2019 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2019.csv\")\n\nRows: 8 Columns: 214\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (50): Field1, TOT_EMP_RES, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3...\ndbl (164): F2000_POP, F2010_POP, TOT_POP, UND19, A20_34, A35_49, A50_64, A65...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2019 &lt;- county2019 %&gt;%\n  add_column(year = 2019) %&gt;%\n  rename(GEOG = Field1) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_5UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         H_Cost_Typical, # % income spent on housing for typical family\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2020 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2020.csv\")\n\nRows: 8 Columns: 222\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (23): GEOG, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (181): F2000_POP, F2010_POP, TOT_POP, UND19, A20_34, A35_49, A50_64, A65...\nlgl  (18): F2000_UND19, F2000_A20_34, F2000_A35_49, F2000_A50_64, F2000_OV65...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2020 &lt;- county2020 %&gt;%\n  add_column(year = 2020) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_5UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         H_Cost_Typical, # % income spent on housing for typical family\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2021 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2021.csv\")\n\nRows: 8 Columns: 282\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (28): GEOG, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (236): GEOID, F2000_POP, F2010_POP, TOT_POP, UND5, A5_19, A20_34, A35_49...\nlgl  (18): F2000_UND19, F2000_A20_34, F2000_A35_49, F2000_A50_64, F2000_OV65...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2021 &lt;- county2021 %&gt;%\n  add_column(year = 2021) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_19UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         H_Cost_Typical, # % income spent on housing for typical family\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2022 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2022.csv\")\n\nRows: 8 Columns: 259\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (25): GEOG, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (216): GEOID, F2000_POP, F2010_POP, F2020_POP, F2020_HH, F2020_HH_SIZE, ...\nlgl  (18): F2000_UND19, F2000_A20_34, F2000_A35_49, F2000_A50_64, F2000_OV65...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2022 &lt;- county2022 %&gt;%\n  add_column(year = 2022) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_19UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         H_Cost_Typical, # % income spent on housing for typical family\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2023 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2023.csv\")\n\nRows: 8 Columns: 259\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (25): GEOG, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (216): GEOID, F2000_POP, F2010_POP, F2020_POP, F2020_HH, F2020_HH_SIZE, ...\nlgl  (18): F2000_UND19, F2000_A20_34, F2000_A35_49, F2000_A50_64, F2000_OV65...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2023 &lt;- county2023 %&gt;%\n  add_column(year = 2023) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_19UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         H_Cost_Typical, # % income spent on housing for typical family\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )\n\n\n\n\n\ncounty2024 &lt;- read_csv(\".\\\\inputs\\\\CDS\\\\County_2024.csv\")\n\nRows: 8 Columns: 429\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (22): GEOG, RES_NAICS1_TYPE, RES_NAICS2_TYPE, RES_NAICS3_TYPE, RES_NAIC...\ndbl (243): GEOID, F2000_POP, F2010_POP, F2020_POP, F2020_HH, F2020_HH_SIZE, ...\nlgl (164): HA_AFT2000, HA_70_00, TRANSIT_LOW_PCT, TRANSIT_MOD_PCT, TRANSIT_H...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty2024 &lt;- county2024 %&gt;%\n  add_column(year = 2024) %&gt;%\n  select(-c(HA_AFT2000:PRIV_EMP)) %&gt;%\n  select(GEOG,  # GEO\n         MEDINC,   # MEDIAN INCOME\n         HU_TOT:HU_GT_19UN,  # HOUSING UNITS AND TYPE\n         TOT_POP,  # POPULATION\n         MED_HV,   # MEDIAN HOME VALUE\n         TOT_HH,   # TOTAL HOUSEHOLDS\n         OWN_OCC_HU,  # OWNER OCCUPIED\n         RENT_OCC_HU,  # RENTER OCCUPIED\n         VAC_HU,  # VACANT UNITS\n         MED_AGE,   # MEDIAN AGE\n         H_Cost_Typical, # % income spent on housing for typical family\n         year)%&gt;%  # year\n    relocate(year,\n             .after = GEOG\n    )"
  },
  {
    "objectID": "index.html#standardize-variables",
    "href": "index.html#standardize-variables",
    "title": "why rehab",
    "section": "",
    "text": "county2014 &lt;- county2014 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_GT_5UN)) \n\n\ncounty2015 &lt;- county2015 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_GT_5UN)) \n\n\ncounty2016 &lt;- county2016 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_GT_5UN)) \n\n\ncounty2017 &lt;- county2017 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_GT_5UN)) \n\n\ncounty2018 &lt;- county2018 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_GT_5UN)) \n\n\ncounty2019 &lt;- county2019 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_GT_5UN)) \n\n\ncounty2020 &lt;- county2020 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_GT_5UN)) \n\n\ncounty2021 &lt;- county2021 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_5_9UN +\n                        HU_10_19UN + HU_GT_19UN),\n         HU_GT_5UN = (HU_5_9UN + HU_10_19UN + HU_GT_19UN)) \n\n\ncounty2022 &lt;- county2022 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_5_9UN +\n                        HU_10_19UN + HU_GT_19UN),\n         HU_GT_5UN = (HU_5_9UN + HU_10_19UN + HU_GT_19UN))  \n\n\ncounty2023 &lt;- county2023 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_5_9UN +\n                        HU_10_19UN + HU_GT_19UN),\n         HU_GT_5UN = (HU_5_9UN + HU_10_19UN + HU_GT_19UN)) \n\n\ncounty2024 &lt;- county2024 %&gt;%\n  mutate(single_fam = (HU_SNG_DET + HU_SNG_ATT),\n         multi_fam = (HU_2UN + HU_3_4UN + HU_5_9UN +\n                        HU_10_19UN + HU_GT_19UN),\n         HU_GT_5UN = (HU_5_9UN + HU_10_19UN + HU_GT_19UN))"
  },
  {
    "objectID": "index.html#binding-rows",
    "href": "index.html#binding-rows",
    "title": "why rehab",
    "section": "",
    "text": "county &lt;- bind_rows(county2014,\n          county2015,\n          county2016,\n          county2017,\n          county2018,\n          county2019,\n          county2020,\n          county2021,\n          county2022,\n          county2023,\n          county2024)\n\ncounty &lt;- county %&gt;%\n  mutate(GEOG = str_replace(GEOG, \"CMAP Region\", \"Region\")) %&gt;%\n  mutate(vac_rate = ((VAC_HU/HU_TOT)*100))"
  },
  {
    "objectID": "index.html#adjust-for-inflation",
    "href": "index.html#adjust-for-inflation",
    "title": "why rehab",
    "section": "",
    "text": "inflation &lt;- read_csv(\".\\\\inputs\\\\inflation.csv\")\n\nNew names:\nRows: 15 Columns: 5\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(2): period, periodName dbl (3): ...1, year, value\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\ncounty &lt;- county %&gt;%\n  full_join(inflation, join_by(year == year)) %&gt;%\n  rename(inflationfac = value) %&gt;%\n  mutate(infl2024 = 313.689/inflationfac) %&gt;% #313.689 is the 2024 inflation factor \n  mutate(medincome_adjust = infl2024 *MEDINC) %&gt;%\n  mutate(medhv_adjust = infl2024 * MED_HV)"
  },
  {
    "objectID": "index.html#units-to-households",
    "href": "index.html#units-to-households",
    "title": "why rehab",
    "section": "",
    "text": "county &lt;- county %&gt;%\n  mutate(stock_hh = HU_TOT / TOT_HH)\n\n\nwrite_csv(county, \".\\\\county.csv\")"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Housing units.html",
    "href": "Housing units.html",
    "title": "Housing units",
    "section": "",
    "text": "Loading required package: usethis\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n\ncmapplot has registered the following fonts for use in this R session:\n   Whitney Semibold, Whitney Medium, Whitney Book\n\ncmapplot requires RStudio to use Whitney fonts in the R plots window.\n    Please install RStudio. &lt;https://www.rstudio.com&gt;\n\nNew names:\nRows: 91 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): GEOG, period, periodName\ndbl (28): year, MEDINC, HU_TOT, HU_SNG_DET, HU_SNG_ATT, HU_2UN, HU_3_4UN, HU...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Housing units.html#total-housing-units",
    "href": "Housing units.html#total-housing-units",
    "title": "Housing units",
    "section": "Total housing units",
    "text": "Total housing units"
  },
  {
    "objectID": "Housing units.html#plotly",
    "href": "Housing units.html#plotly",
    "title": "Housing units",
    "section": "plotly",
    "text": "plotly\n\n\nWarning in dir.create(target_dir): 'total_units_files\\htmltools-fill-0.5.8.1'\nalready exists\n\n\nWarning in dir.create(target_dir): 'total_units_files\\htmlwidgets-1.6.4'\nalready exists\n\n\nWarning in dir.create(target_dir): 'total_units_files\\plotly-binding-4.10.4'\nalready exists\n\n\nWarning in dir.create(target_dir): 'total_units_files\\typedarray-0.1' already\nexists\n\n\nWarning in dir.create(target_dir): 'total_units_files\\jquery-3.5.1' already\nexists\n\n\nWarning in dir.create(target_dir): 'total_units_files\\crosstalk-1.2.1' already\nexists\n\n\nWarning in dir.create(target_dir):\n'total_units_files\\plotly-htmlwidgets-css-2.11.1' already exists\n\n\nWarning in dir.create(target_dir): 'total_units_files\\plotly-main-2.11.1'\nalready exists"
  },
  {
    "objectID": "index.html#total-housing-units",
    "href": "index.html#total-housing-units",
    "title": "why rehab",
    "section": "Total housing units",
    "text": "Total housing units\n\ntotal_units_plot &lt;- county %&gt;%\n  filter(GEOG != \"Region\") %&gt;%\n  rename(County = GEOG,\n         `Total housing units` = HU_TOT,\n         Year = year) %&gt;%\n  ggplot(aes(x = Year, \n             y = `Total housing units`, \n             color = County,\n             group = County,\n             text = paste(\"County:\", County,\n                          \"&lt;br&gt;Year:\", Year,\n                          \"&lt;br&gt;Total housing units:\", scales::comma(`Total housing units`)))) +\n  geom_line(linewidth = 1) +\n  geom_point() +\n  scale_y_continuous(labels = scales::comma_format()) +\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Total housing units\") +\n  cmap_color_discrete(palette = \"main\")\n\n\nTotal housing units plotly export\n\ntotal_units_plotly &lt;- \nggplotly(total_units_plot, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Total housing units by county, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"County\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \ntotal_units_plotly\n\n\n\n\nhtmlwidgets::saveWidget(as_widget(total_units_plotly), \".\\\\docs\\\\total_units.html\", selfcontained = T)\n\nWarning in dir.create(target_dir): 'total_units_files\\htmltools-fill-0.5.8.1'\nalready exists\n\n\nWarning in dir.create(target_dir): 'total_units_files\\htmlwidgets-1.6.4'\nalready exists\n\n\nWarning in dir.create(target_dir): 'total_units_files\\plotly-binding-4.10.4'\nalready exists\n\n\nWarning in dir.create(target_dir): 'total_units_files\\typedarray-0.1' already\nexists\n\n\nWarning in dir.create(target_dir): 'total_units_files\\jquery-3.5.1' already\nexists\n\n\nWarning in dir.create(target_dir): 'total_units_files\\crosstalk-1.2.1' already\nexists\n\n\nWarning in dir.create(target_dir):\n'total_units_files\\plotly-htmlwidgets-css-2.11.1' already exists\n\n\nWarning in dir.create(target_dir): 'total_units_files\\plotly-main-2.11.1'\nalready exists"
  },
  {
    "objectID": "index.html#vacancy-rate",
    "href": "index.html#vacancy-rate",
    "title": "why rehab",
    "section": "Vacancy rate",
    "text": "Vacancy rate\n\nvacancy_rate_plot &lt;- \n  \n  county %&gt;%\n  filter(GEOG != \"Region\") %&gt;%\n  rename(County = GEOG,\n         `Vacancy rate` = vac_rate,\n         Year = year) %&gt;%\n  mutate(`Vacancy rate` = round(`Vacancy rate`, 1))%&gt;%\n  ggplot(aes(x = Year, \n             y = `Vacancy rate`, \n             color = County,\n             group = County,\n             text = paste(\"County:\", County,\n                          \"&lt;br&gt;Year:\", Year,\n                          \"&lt;br&gt;Vacancy rate:\", `Vacancy rate`))) +\n  geom_line(linewidth = 1) +\n  geom_point() +\n  geom_hline(yintercept = 8, linetype = \"dashed\", color = \"#3C3C3C\", size = 1) +  # Line at y = 8\n  geom_hline(yintercept = 2, linetype = \"dashed\", color = \"#3C3C3C\", size = 1) +  # Line at y = 2\n  annotate(\"text\", x = 2020, y = 8.25, \n           label = \"Healthy rental vacancy rate\",\n           color = \"#3C3C3C\", \n           size = 5, \n           hjust = 0.5,\n           family = \"Whitney\")+\n  annotate(\"text\", x = 2020, y = 2.25, \n           label = \"Healthy homeowner vacancy rate\", \n           color = \"#3C3C3C\", \n           size = 5, \n           hjust = 0.5,\n           family = \"Whitney\")+\n  scale_y_continuous(labels = scales::comma_format()) +\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Vacancy rate\") +\n  cmap_color_discrete(palette = \"main\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\nvacancy rate plotly\n\nvacancy_rate_plotly &lt;- \nggplotly(vacancy_rate_plot, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Vacancy rate (percent) by county, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"County\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(vacancy_rate_plotly), \".\\\\docs\\\\vacancy_rate.html\", selfcontained = T)\n\nWarning in dir.create(target_dir): 'vacancy_rate_files\\htmltools-fill-0.5.8.1'\nalready exists\n\n\nWarning in dir.create(target_dir): 'vacancy_rate_files\\htmlwidgets-1.6.4'\nalready exists\n\n\nWarning in dir.create(target_dir): 'vacancy_rate_files\\plotly-binding-4.10.4'\nalready exists\n\n\nWarning in dir.create(target_dir): 'vacancy_rate_files\\typedarray-0.1' already\nexists\n\n\nWarning in dir.create(target_dir): 'vacancy_rate_files\\jquery-3.5.1' already\nexists\n\n\nWarning in dir.create(target_dir): 'vacancy_rate_files\\crosstalk-1.2.1' already\nexists\n\n\nWarning in dir.create(target_dir):\n'vacancy_rate_files\\plotly-htmlwidgets-css-2.11.1' already exists\n\n\nWarning in dir.create(target_dir): 'vacancy_rate_files\\plotly-main-2.11.1'\nalready exists"
  },
  {
    "objectID": "index.html#median-household-income",
    "href": "index.html#median-household-income",
    "title": "why rehab",
    "section": "Median household income",
    "text": "Median household income\n\nmedian_hhi_plot &lt;- \n  county %&gt;%\n  filter(GEOG != \"Region\") %&gt;%\n  rename(County = GEOG,\n         `Median household income` = medincome_adjust,\n         Year = year) %&gt;%\n  ggplot(aes(x = Year, \n             y = `Median household income`, \n             color = County,\n             group = County,\n             text = paste(\"County:\", County,\n                          \"&lt;br&gt;Year:\", Year,\n                          \"&lt;br&gt;Median household income (inflation-adjusted to 2024):\", scales::comma(`Median household income`)))) +\n  geom_line(linewidth = 1) +\n  geom_point() +\n  scale_y_continuous(labels = scales::comma_format()) +\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Median household income\") +\n  cmap_color_discrete(palette = \"main\")\n\n\nmedian household income plotly\n\nmedian_hhi_plotly &lt;- \nggplotly(median_hhi_plot, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Median household income&lt;br&gt;in 2024 inflation-adjusted dollars, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"County\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(median_hhi_plotly), \".\\\\docs\\\\median_hhi.html\", selfcontained = T)\n\nWarning in dir.create(target_dir): 'median_hhi_files\\htmltools-fill-0.5.8.1'\nalready exists\n\n\nWarning in dir.create(target_dir): 'median_hhi_files\\htmlwidgets-1.6.4' already\nexists\n\n\nWarning in dir.create(target_dir): 'median_hhi_files\\plotly-binding-4.10.4'\nalready exists\n\n\nWarning in dir.create(target_dir): 'median_hhi_files\\typedarray-0.1' already\nexists\n\n\nWarning in dir.create(target_dir): 'median_hhi_files\\jquery-3.5.1' already\nexists\n\n\nWarning in dir.create(target_dir): 'median_hhi_files\\crosstalk-1.2.1' already\nexists\n\n\nWarning in dir.create(target_dir):\n'median_hhi_files\\plotly-htmlwidgets-css-2.11.1' already exists\n\n\nWarning in dir.create(target_dir): 'median_hhi_files\\plotly-main-2.11.1'\nalready exists"
  },
  {
    "objectID": "index.html#median-age",
    "href": "index.html#median-age",
    "title": "why rehab",
    "section": "Median age",
    "text": "Median age\n\nmedian_age_plot &lt;- county %&gt;%\n  filter(GEOG != \"Region\") %&gt;%\n  rename(County = GEOG,\n         `Median age` = MED_AGE,\n         Year = year) %&gt;%\n  ggplot(aes(x = Year, \n             y = `Median age`, \n             color = County,\n             group = County,\n             text = paste(\"County:\", County,\n                          \"&lt;br&gt;Year:\", Year,\n                          \"&lt;br&gt;Median age:\", `Median age`))) +\n  geom_line(linewidth = 1) +\n  geom_point() +\n  scale_y_continuous(labels = scales::comma_format()) +\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Median age\") +\n  cmap_color_discrete(palette = \"main\")\n\n\nmedian age plotly\n\nmedian_age_plotly &lt;- \nggplotly(median_age_plot, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Median age by county, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"County\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(median_age_plotly), \".\\\\docs\\\\median_age.html\", selfcontained = T)"
  },
  {
    "objectID": "index.html#median-home-value",
    "href": "index.html#median-home-value",
    "title": "why rehab",
    "section": "Median home value",
    "text": "Median home value\n\nmedian_hv_plot &lt;- \n  county %&gt;%\n  filter(GEOG != \"Region\") %&gt;%\n  rename(County = GEOG,\n         `Median home value` = medhv_adjust,\n         Year = year) %&gt;%\n  ggplot(aes(x = Year, \n             y = `Median home value`, \n             color = County,\n             group = County,\n             text = paste(\"County:\", County,\n                          \"&lt;br&gt;Year:\", Year,\n                          \"&lt;br&gt;Median home value (inflation-adjusted to 2024):\", scales::comma(`Median home value`)))) +\n  geom_line(linewidth = 1) +\n  geom_point() +\n  scale_y_continuous(labels = scales::comma_format()) +\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Median home value\") +\n  cmap_color_discrete(palette = \"main\")\n\n\nmedian home value\n\nmedian_hv_plotly &lt;- \nggplotly(median_hv_plot, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Median home value&lt;br&gt;in 2024 inflation-adjusted dollars, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"County\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(median_hv_plotly), \".\\\\docs\\\\median_hv.html\", selfcontained = T)"
  },
  {
    "objectID": "index.html#occupied-vacancies",
    "href": "index.html#occupied-vacancies",
    "title": "why rehab",
    "section": "Occupied / vacancies",
    "text": "Occupied / vacancies\n\ntenure_plot &lt;- county %&gt;%\n  filter(GEOG == \"Region\") %&gt;%\n  select(GEOG,\n         year,\n         OWN_OCC_HU:VAC_HU) %&gt;%\n  rename(`Owner-occupied` = OWN_OCC_HU,\n         `Renter-occupied` = RENT_OCC_HU,\n         `Vacant`=VAC_HU) %&gt;%\n  pivot_longer(\n    cols = c(`Owner-occupied`,\n             `Renter-occupied`,\n             `Vacant`),  # columns to pivot\n    names_to = \"Occupancy status\",        # new column for names\n    values_to = \"Number of units\"               # new column for values\n  ) %&gt;%\n  group_by(year) %&gt;%\n  ggplot(aes(fill = `Occupancy status`,\n             y = `Number of units`,\n             x = year,\n             text = paste(\"Occupancy status:\", `Occupancy status`,\n                          \"&lt;br&gt;Year:\", year,\n                          \"&lt;br&gt;Number of housing units:\", scales::comma(`Number of units`)))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_x_continuous(breaks = seq(min(county$year), max(county$year), by = 1))+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Number of housing units\") +\n  cmap_fill_discrete(palette = \"main\")\n\n\noccupancy plotly\n\ntenure_plotly &lt;- \nggplotly(tenure_plot, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Housing tenure in&lt;br&gt;northeastern Illinois, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"Occupany status\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(tenure_plotly), \".\\\\docs\\\\housing_tenure.html\", selfcontained = T)\n\n\nCook County\n\ntenure_cook &lt;- county %&gt;%\n  filter(GEOG == \"Cook County\") %&gt;%\n  select(GEOG,\n         year,\n         OWN_OCC_HU:VAC_HU) %&gt;%\n  rename(`Owner-occupied` = OWN_OCC_HU,\n         `Renter-occupied` = RENT_OCC_HU,\n         `Vacant`=VAC_HU) %&gt;%\n  pivot_longer(\n    cols = c(`Owner-occupied`,\n             `Renter-occupied`,\n             `Vacant`),  # columns to pivot\n    names_to = \"Occupancy status\",        # new column for names\n    values_to = \"Number of units\"               # new column for values\n  ) %&gt;%\n  group_by(year) %&gt;%\n  ggplot(aes(fill = `Occupancy status`,\n             y = `Number of units`,\n             x = year,\n             text = paste(\"Occupancy status:\", `Occupancy status`,\n                          \"&lt;br&gt;Year:\", year,\n                          \"&lt;br&gt;Number of housing units:\", scales::comma(`Number of units`)))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_x_continuous(breaks = seq(min(county$year), max(county$year), by = 1))+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Number of housing units\") +\n  cmap_fill_discrete(palette = \"main\")\n\n\n\nCook plotly\n\ncooktenure_plotly &lt;- \nggplotly(tenure_cook, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Housing tenure in&lt;br&gt;Cook County, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"Occupany status\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(cooktenure_plotly), \".\\\\docs\\\\housing_tenure_cook.html\", selfcontained = T)\n\n\n\ndupage\n\ntenure_DuPage &lt;- county %&gt;%\n  filter(GEOG == \"DuPage County\") %&gt;%\n  select(GEOG,\n         year,\n         OWN_OCC_HU:VAC_HU) %&gt;%\n  rename(`Owner-occupied` = OWN_OCC_HU,\n         `Renter-occupied` = RENT_OCC_HU,\n         `Vacant`=VAC_HU) %&gt;%\n  pivot_longer(\n    cols = c(`Owner-occupied`,\n             `Renter-occupied`,\n             `Vacant`),  # columns to pivot\n    names_to = \"Occupancy status\",        # new column for names\n    values_to = \"Number of units\"               # new column for values\n  ) %&gt;%\n  group_by(year) %&gt;%\n  ggplot(aes(fill = `Occupancy status`,\n             y = `Number of units`,\n             x = year,\n             text = paste(\"Occupancy status:\", `Occupancy status`,\n                          \"&lt;br&gt;Year:\", year,\n                          \"&lt;br&gt;Number of housing units:\", scales::comma(`Number of units`)))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_x_continuous(breaks = seq(min(county$year), max(county$year), by = 1))+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Number of housing units\") +\n  cmap_fill_discrete(palette = \"main\")\n\n\n\nDuPage plotly\n\nDuPagetenure_plotly &lt;- \nggplotly(tenure_DuPage, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Housing tenure in&lt;br&gt;DuPage County, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"Occupany status\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(DuPagetenure_plotly), \".\\\\docs\\\\housing_tenure_DuPage.html\", selfcontained = T)\n\n\n\nKane\n\ntenure_Kane &lt;- county %&gt;%\n  filter(GEOG == \"Kane County\") %&gt;%\n  select(GEOG,\n         year,\n         OWN_OCC_HU:VAC_HU) %&gt;%\n  rename(`Owner-occupied` = OWN_OCC_HU,\n         `Renter-occupied` = RENT_OCC_HU,\n         `Vacant`=VAC_HU) %&gt;%\n  pivot_longer(\n    cols = c(`Owner-occupied`,\n             `Renter-occupied`,\n             `Vacant`),  # columns to pivot\n    names_to = \"Occupancy status\",        # new column for names\n    values_to = \"Number of units\"               # new column for values\n  ) %&gt;%\n  group_by(year) %&gt;%\n  ggplot(aes(fill = `Occupancy status`,\n             y = `Number of units`,\n             x = year,\n             text = paste(\"Occupancy status:\", `Occupancy status`,\n                          \"&lt;br&gt;Year:\", year,\n                          \"&lt;br&gt;Number of housing units:\", scales::comma(`Number of units`)))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_x_continuous(breaks = seq(min(county$year), max(county$year), by = 1))+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Number of housing units\") +\n  cmap_fill_discrete(palette = \"main\")\n\n\n\nKane plotly\n\nKanetenure_plotly &lt;- \nggplotly(tenure_Kane, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Housing tenure in&lt;br&gt;Kane County, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"Occupany status\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(Kanetenure_plotly), \".\\\\docs\\\\housing_tenure_Kane.html\", selfcontained = T)\n\n\n\nKendall\n\ntenure_Kendall &lt;- county %&gt;%\n  filter(GEOG == \"Kendall County\") %&gt;%\n  select(GEOG,\n         year,\n         OWN_OCC_HU:VAC_HU) %&gt;%\n  rename(`Owner-occupied` = OWN_OCC_HU,\n         `Renter-occupied` = RENT_OCC_HU,\n         `Vacant`=VAC_HU) %&gt;%\n  pivot_longer(\n    cols = c(`Owner-occupied`,\n             `Renter-occupied`,\n             `Vacant`),  # columns to pivot\n    names_to = \"Occupancy status\",        # new column for names\n    values_to = \"Number of units\"               # new column for values\n  ) %&gt;%\n  group_by(year) %&gt;%\n  ggplot(aes(fill = `Occupancy status`,\n             y = `Number of units`,\n             x = year,\n             text = paste(\"Occupancy status:\", `Occupancy status`,\n                          \"&lt;br&gt;Year:\", year,\n                          \"&lt;br&gt;Number of housing units:\", scales::comma(`Number of units`)))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_x_continuous(breaks = seq(min(county$year), max(county$year), by = 1))+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Number of housing units\") +\n  cmap_fill_discrete(palette = \"main\")\n\n\n\nKendall plotly\n\nKendalltenure_plotly &lt;- \nggplotly(tenure_Kendall, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Housing tenure in&lt;br&gt;Kendall County, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"Occupany status\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(Kendalltenure_plotly), \".\\\\docs\\\\housing_tenure_Kendall.html\", selfcontained = T)\n\n\n\nLake\n\ntenure_Lake &lt;- county %&gt;%\n  filter(GEOG == \"Lake County\") %&gt;%\n  select(GEOG,\n         year,\n         OWN_OCC_HU:VAC_HU) %&gt;%\n  rename(`Owner-occupied` = OWN_OCC_HU,\n         `Renter-occupied` = RENT_OCC_HU,\n         `Vacant`=VAC_HU) %&gt;%\n  pivot_longer(\n    cols = c(`Owner-occupied`,\n             `Renter-occupied`,\n             `Vacant`),  # columns to pivot\n    names_to = \"Occupancy status\",        # new column for names\n    values_to = \"Number of units\"               # new column for values\n  ) %&gt;%\n  group_by(year) %&gt;%\n  ggplot(aes(fill = `Occupancy status`,\n             y = `Number of units`,\n             x = year,\n             text = paste(\"Occupancy status:\", `Occupancy status`,\n                          \"&lt;br&gt;Year:\", year,\n                          \"&lt;br&gt;Number of housing units:\", scales::comma(`Number of units`)))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_x_continuous(breaks = seq(min(county$year), max(county$year), by = 1))+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Number of housing units\") +\n  cmap_fill_discrete(palette = \"main\")\n\n\n\nLake plotly\n\nLaketenure_plotly &lt;- \nggplotly(tenure_Lake, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Housing tenure in&lt;br&gt;Lake County, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"Occupany status\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(Laketenure_plotly), \".\\\\docs\\\\housing_tenure_Lake.html\", selfcontained = T)\n\n\n\nMchenry\n\ntenure_McHenry &lt;- county %&gt;%\n  filter(GEOG == \"McHenry County\") %&gt;%\n  select(GEOG,\n         year,\n         OWN_OCC_HU:VAC_HU) %&gt;%\n  rename(`Owner-occupied` = OWN_OCC_HU,\n         `Renter-occupied` = RENT_OCC_HU,\n         `Vacant`=VAC_HU) %&gt;%\n  pivot_longer(\n    cols = c(`Owner-occupied`,\n             `Renter-occupied`,\n             `Vacant`),  # columns to pivot\n    names_to = \"Occupancy status\",        # new column for names\n    values_to = \"Number of units\"               # new column for values\n  ) %&gt;%\n  group_by(year) %&gt;%\n  ggplot(aes(fill = `Occupancy status`,\n             y = `Number of units`,\n             x = year,\n             text = paste(\"Occupancy status:\", `Occupancy status`,\n                          \"&lt;br&gt;Year:\", year,\n                          \"&lt;br&gt;Number of housing units:\", scales::comma(`Number of units`)))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_x_continuous(breaks = seq(min(county$year), max(county$year), by = 1))+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Number of housing units\") +\n  cmap_fill_discrete(palette = \"main\")\n\n\n\nMcHenry plotly\n\nMcHenrytenure_plotly &lt;- \nggplotly(tenure_McHenry, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Housing tenure in&lt;br&gt;McHenry County, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"Occupany status\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(McHenrytenure_plotly), \".\\\\docs\\\\housing_tenure_McHenry.html\", selfcontained = T)\n\n\n\nWill\n\ntenure_Will &lt;- county %&gt;%\n  filter(GEOG == \"Will County\") %&gt;%\n  select(GEOG,\n         year,\n         OWN_OCC_HU:VAC_HU) %&gt;%\n  rename(`Owner-occupied` = OWN_OCC_HU,\n         `Renter-occupied` = RENT_OCC_HU,\n         `Vacant`=VAC_HU) %&gt;%\n  pivot_longer(\n    cols = c(`Owner-occupied`,\n             `Renter-occupied`,\n             `Vacant`),  # columns to pivot\n    names_to = \"Occupancy status\",        # new column for names\n    values_to = \"Number of units\"               # new column for values\n  ) %&gt;%\n  group_by(year) %&gt;%\n  ggplot(aes(fill = `Occupancy status`,\n             y = `Number of units`,\n             x = year,\n             text = paste(\"Occupancy status:\", `Occupancy status`,\n                          \"&lt;br&gt;Year:\", year,\n                          \"&lt;br&gt;Number of housing units:\", scales::comma(`Number of units`)))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_x_continuous(breaks = seq(min(county$year), max(county$year), by = 1))+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Number of housing units\") +\n  cmap_fill_discrete(palette = \"main\")\n\n\n\nWill plotly\n\nWilltenure_plotly &lt;- \nggplotly(tenure_Will, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Housing tenure in&lt;br&gt;Will County, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"Occupany status\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(Willtenure_plotly), \".\\\\docs\\\\housing_tenure_Will.html\", selfcontained = T)"
  },
  {
    "objectID": "index.html#housing-units-grouped-by-county-by-year",
    "href": "index.html#housing-units-grouped-by-county-by-year",
    "title": "why rehab",
    "section": "housing units grouped by county by year",
    "text": "housing units grouped by county by year\n\ntotal_units &lt;- county %&gt;%\n  filter(GEOG != \"Region\") %&gt;%\n  select(GEOG,\n         year,\n         HU_TOT) %&gt;%\n  rename(`Total housing units` = HU_TOT,\n         `County` = GEOG) %&gt;%\n  group_by(year) %&gt;%\n  ggplot(aes(fill = `County`,\n             y = `Total housing units`,\n             x = year,\n             text = paste(\"County:\", `County`,\n                          \"&lt;br&gt;Year:\", year,\n                          \"&lt;br&gt;Number of housing units:\", scales::comma(`Total housing units`)))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_x_continuous(breaks = seq(min(county$year), max(county$year), by = 1))+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Number of housing units\") +\n  cmap_fill_discrete(palette = \"main\")\n\n\nhousing units plotly\n\nunits_plotly &lt;- \nggplotly(total_units, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Housing units in&lt;br&gt;northeastern Illinois, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"County\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(units_plotly), \".\\\\docs\\\\housing_units_bar.html\", selfcontained = T)"
  },
  {
    "objectID": "index.html#housing-types",
    "href": "index.html#housing-types",
    "title": "why rehab",
    "section": "Housing types",
    "text": "Housing types\n\nregion\n\ntype_plot &lt;- county %&gt;%\n  filter(GEOG == \"Region\") %&gt;%\n  mutate(HU_2_4UN = (HU_2UN + HU_3_4UN)) %&gt;%\n  select(GEOG,\n         year,\n         HU_SNG_DET,\n         HU_SNG_ATT,\n         HU_2_4UN,\n         HU_GT_5UN) %&gt;%\n  rename(`Single-family, detached` = HU_SNG_DET,\n         `Single-family, attached` = HU_SNG_ATT,\n         `Multi-family, 2 to 4 units` = HU_2_4UN,\n         `Mutli-family, greater than 5 units` = HU_GT_5UN) %&gt;%\n  pivot_longer(\n    cols = c(`Single-family, detached`,\n             `Single-family, attached`,\n             `Multi-family, 2 to 4 units`,\n             `Mutli-family, greater than 5 units`),  # columns to pivot\n    names_to = \"Housing type\",        # new column for names\n    values_to = \"Number of units\"               # new column for values\n  ) %&gt;%\n  group_by(year) %&gt;%\n  ggplot(aes(fill = `Housing type`,\n             y = `Number of units`,\n             x = year,\n             text = paste(\"Housing type:\", `Housing type`,\n                          \"&lt;br&gt;Year:\", year,\n                          \"&lt;br&gt;Number of housing units:\", scales::comma(`Number of units`)))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_x_continuous(breaks = seq(min(county$year), max(county$year), by = 1))+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Number of housing units\") +\n  cmap_fill_discrete(palette = \"governance\")\n\n\nregion plotly\n\ntype_plotly &lt;- \nggplotly(type_plot, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Housing types in&lt;br&gt;northeastern Illinois, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"Housing types\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(type_plotly), \".\\\\docs\\\\housing_type.html\", selfcontained = T)\n\n\n\n\ncook housing types\n\ntype_plot_Cook &lt;- county %&gt;%\n  filter(GEOG == \"Cook County\") %&gt;%\n  mutate(HU_2_4UN = (HU_2UN + HU_3_4UN)) %&gt;%\n  select(GEOG,\n         year,\n         HU_SNG_DET,\n         HU_SNG_ATT,\n         HU_2_4UN,\n         HU_GT_5UN) %&gt;%\n  rename(`Single-family, detached` = HU_SNG_DET,\n         `Single-family, attached` = HU_SNG_ATT,\n         `Multi-family, 2 to 4 units` = HU_2_4UN,\n         `Mutli-family, greater than 5 units` = HU_GT_5UN) %&gt;%\n  pivot_longer(\n    cols = c(`Single-family, detached`,\n             `Single-family, attached`,\n             `Multi-family, 2 to 4 units`,\n             `Mutli-family, greater than 5 units`),  # columns to pivot\n    names_to = \"Housing type\",        # new column for names\n    values_to = \"Number of units\"               # new column for values\n  ) %&gt;%\n  group_by(year) %&gt;%\n  ggplot(aes(fill = `Housing type`,\n             y = `Number of units`,\n             x = year,\n             text = paste(\"Housing type:\", `Housing type`,\n                          \"&lt;br&gt;Year:\", year,\n                          \"&lt;br&gt;Number of housing units:\", scales::comma(`Number of units`)))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_x_continuous(breaks = seq(min(county$year), max(county$year), by = 1))+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Number of housing units\") +\n  cmap_fill_discrete(palette = \"governance\")\n\n\ncook plotly\n\ntype_plotly_Cook &lt;- \nggplotly(type_plot_Cook, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Housing types in&lt;br&gt;Cook County, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"Housing types\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(type_plotly_Cook), \".\\\\docs\\\\housing_type_Cook.html\", selfcontained = T)\n\n\n\n\ndupage housing types\n\ntype_plot_DuPage &lt;- county %&gt;%\n  filter(GEOG == \"DuPage County\") %&gt;%\n  mutate(HU_2_4UN = (HU_2UN + HU_3_4UN)) %&gt;%\n  select(GEOG,\n         year,\n         HU_SNG_DET,\n         HU_SNG_ATT,\n         HU_2_4UN,\n         HU_GT_5UN) %&gt;%\n  rename(`Single-family, detached` = HU_SNG_DET,\n         `Single-family, attached` = HU_SNG_ATT,\n         `Multi-family, 2 to 4 units` = HU_2_4UN,\n         `Mutli-family, greater than 5 units` = HU_GT_5UN) %&gt;%\n  pivot_longer(\n    cols = c(`Single-family, detached`,\n             `Single-family, attached`,\n             `Multi-family, 2 to 4 units`,\n             `Mutli-family, greater than 5 units`),  # columns to pivot\n    names_to = \"Housing type\",        # new column for names\n    values_to = \"Number of units\"               # new column for values\n  ) %&gt;%\n  group_by(year) %&gt;%\n  ggplot(aes(fill = `Housing type`,\n             y = `Number of units`,\n             x = year,\n             text = paste(\"Housing type:\", `Housing type`,\n                          \"&lt;br&gt;Year:\", year,\n                          \"&lt;br&gt;Number of housing units:\", scales::comma(`Number of units`)))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_x_continuous(breaks = seq(min(county$year), max(county$year), by = 1))+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Number of housing units\") +\n  cmap_fill_discrete(palette = \"governance\")\n\n\nDuPage plotly\n\ntype_plotly_DuPage &lt;- \nggplotly(type_plot_DuPage, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Housing types in&lt;br&gt;DuPage County, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"Housing types\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(type_plotly_DuPage), \".\\\\docs\\\\housing_type_DuPage.html\", selfcontained = T)\n\n\n\n\nKane housing types\n\ntype_plot_Kane &lt;- county %&gt;%\n  filter(GEOG == \"Kane County\") %&gt;%\n  mutate(HU_2_4UN = (HU_2UN + HU_3_4UN)) %&gt;%\n  select(GEOG,\n         year,\n         HU_SNG_DET,\n         HU_SNG_ATT,\n         HU_2_4UN,\n         HU_GT_5UN) %&gt;%\n  rename(`Single-family, detached` = HU_SNG_DET,\n         `Single-family, attached` = HU_SNG_ATT,\n         `Multi-family, 2 to 4 units` = HU_2_4UN,\n         `Mutli-family, greater than 5 units` = HU_GT_5UN) %&gt;%\n  pivot_longer(\n    cols = c(`Single-family, detached`,\n             `Single-family, attached`,\n             `Multi-family, 2 to 4 units`,\n             `Mutli-family, greater than 5 units`),  # columns to pivot\n    names_to = \"Housing type\",        # new column for names\n    values_to = \"Number of units\"               # new column for values\n  ) %&gt;%\n  group_by(year) %&gt;%\n  ggplot(aes(fill = `Housing type`,\n             y = `Number of units`,\n             x = year,\n             text = paste(\"Housing type:\", `Housing type`,\n                          \"&lt;br&gt;Year:\", year,\n                          \"&lt;br&gt;Number of housing units:\", scales::comma(`Number of units`)))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_x_continuous(breaks = seq(min(county$year), max(county$year), by = 1))+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Number of housing units\") +\n  cmap_fill_discrete(palette = \"governance\")\n\n\nKane plotly\n\ntype_plotly_Kane &lt;- \nggplotly(type_plot_Kane, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Housing types in&lt;br&gt;Kane County, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"Housing types\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(type_plotly_Kane), \".\\\\docs\\\\housing_type_Kane.html\", selfcontained = T)\n\n\n\n\nKendall housing types\n\ntype_plot_Kendall &lt;- county %&gt;%\n  filter(GEOG == \"Kendall County\") %&gt;%\n  mutate(HU_2_4UN = (HU_2UN + HU_3_4UN)) %&gt;%\n  select(GEOG,\n         year,\n         HU_SNG_DET,\n         HU_SNG_ATT,\n         HU_2_4UN,\n         HU_GT_5UN) %&gt;%\n  rename(`Single-family, detached` = HU_SNG_DET,\n         `Single-family, attached` = HU_SNG_ATT,\n         `Multi-family, 2 to 4 units` = HU_2_4UN,\n         `Mutli-family, greater than 5 units` = HU_GT_5UN) %&gt;%\n  pivot_longer(\n    cols = c(`Single-family, detached`,\n             `Single-family, attached`,\n             `Multi-family, 2 to 4 units`,\n             `Mutli-family, greater than 5 units`),  # columns to pivot\n    names_to = \"Housing type\",        # new column for names\n    values_to = \"Number of units\"               # new column for values\n  ) %&gt;%\n  group_by(year) %&gt;%\n  ggplot(aes(fill = `Housing type`,\n             y = `Number of units`,\n             x = year,\n             text = paste(\"Housing type:\", `Housing type`,\n                          \"&lt;br&gt;Year:\", year,\n                          \"&lt;br&gt;Number of housing units:\", scales::comma(`Number of units`)))) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  scale_y_continuous(labels = scales::label_comma()) +\n  scale_x_continuous(breaks = seq(min(county$year), max(county$year), by = 1))+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  theme_cmap(xlab = \"Year\",\n             ylab = \"Number of housing units\") +\n  cmap_fill_discrete(palette = \"governance\")\n\n\nKendall plotly\n\ntype_plotly_Kendall &lt;- \nggplotly(type_plot_Kendall, tooltip = \"text\") %&gt;%\n  layout(\n    font = list(family = \"Whitney Semibold\", size = 12),\n    title = list(\n      text = \"Housing types in&lt;br&gt;Kendall County, 2014-2024\",\n      font = list(family = \"Whitney Semibold\", \n                  weight = \"bold\",\n                  size = 32)\n    ),\n    xaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # x-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # x-axis tick labels font\n    ),\n    yaxis = list(\n      title = list(\n        font = list(family = \"Whitney\", size = 20)  # y-axis title font\n      ),\n      tickfont = list(family = \"Whitney\", size = 20)  # y-axis tick labels font\n    ),\n    legend = list(\n      font = list(family = \"Whitney\", size = 18),\n      title = list(\n        text = \"Housing types\",  # Title for legend\n        font = list(family = \"Whitney Semibold\", size = 24, weight = \"bold\")  # Legend title font\n      )\n    ),\n    # Customizing the tooltip\n    hoverlabel = list(\n      font = list(family = \"Whitney\", size = 12),  # Tooltip text font\n      bgcolor = \"rgba(255, 255, 255, 0.7)\",       # Tooltip background color\n      bordercolor = \"black\"                        # Tooltip border color\n    ),\n    margin =(list(t = 100))\n  )\n\n  \n\n\nhtmlwidgets::saveWidget(as_widget(type_plotly_Kendall), \".\\\\docs\\\\housing_type_Kendall.html\", selfcontained = T)"
  }
]